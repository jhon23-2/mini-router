{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\n//Types\ninterface RouterContextType {\n  currentPath: string;\n  navigate: (path: string) => void;\n}\n\ninterface RouterProps {\n  children: ReactNode;\n}\n\ninterface RouteProps {\n  path: string;\n  component: React.ComponentType;\n}\n\ninterface LinkProps {\n  to: string;\n  children: ReactNode;\n  className?: string; // ? meaning optional\n}\n\n// Create context\n\nconst RouterContext = createContext<RouterContextType | null>(null);\n\nexport function Router({ children }: RouterProps) {\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n\n  useEffect(() => {\n    const handlerPopstate = () => {\n      setCurrentPath(currentPath);\n    };\n\n    window.addEventListener(\"popstate\", handlerPopstate);\n    return () => window.removeEventListener(\"popstate\", handlerPopstate);\n  }, []);\n\n  const navigate = (path: string) => {\n    window.history.pushState({}, \"\", path);\n    setCurrentPath(window.location.pathname);\n  };\n\n  return (\n    <RouterContext.Provider value={{ currentPath, navigate }}>\n      {children}\n    </RouterContext.Provider>\n  );\n}\n\nexport function Route({ path, component: Component }: RouteProps) {\n  const context = useContext(RouterContext);\n\n  if (!context) {\n    throw new Error(\"Context is required\");\n  }\n\n  const { currentPath } = context;\n\n  if (currentPath === path) {\n    return <Component />;\n  }\n\n  return null;\n}\n\nexport function Link({ to, children, className }: LinkProps) {\n  const context = useContext(RouterContext);\n\n  if (!context) {\n    throw new Error(\"Context is required\");\n  }\n\n  const { navigate } = context;\n\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    navigate(to);\n  };\n\n  return (\n    <a href={to} onClick={handleClick} className={className}>\n      {children}\n    </a>\n  );\n}\n\n// custom hook useNavigate\n\nexport const useNavigate = () => useContext(RouterContext);\n"],"names":["createContext","useState","useEffect","useContext"],"mappings":";;;;AA6BA;AAEA,MAAM,aAAa,GAAGA,mBAAa,CAA2B,IAAI,CAAC;AAE7D,SAAU,MAAM,CAAC,EAAE,QAAQ,EAAe,EAAA;AAC9C,IAAA,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAGC,cAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAExEC,eAAS,CAAC,MAAK;QACb,MAAM,eAAe,GAAG,MAAK;YAC3B,cAAc,CAAC,WAAW,CAAC;AAC7B,QAAA,CAAC;AAED,QAAA,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,CAAC;QACpD,OAAO,MAAM,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,eAAe,CAAC;IACtE,CAAC,EAAE,EAAE,CAAC;AAEN,IAAA,MAAM,QAAQ,GAAG,CAAC,IAAY,KAAI;QAChC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;AACtC,QAAA,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAC1C,IAAA,CAAC;AAED,IAAA,QACE,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,IACrD,QAAQ,CACc;AAE7B;AAEM,SAAU,KAAK,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAc,EAAA;AAC9D,IAAA,MAAM,OAAO,GAAGC,gBAAU,CAAC,aAAa,CAAC;IAEzC,IAAI,CAAC,OAAO,EAAE;AACZ,QAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC;IACxC;AAEA,IAAA,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO;AAE/B,IAAA,IAAI,WAAW,KAAK,IAAI,EAAE;QACxB,OAAO,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,IAAA,CAAG;IACtB;AAEA,IAAA,OAAO,IAAI;AACb;AAEM,SAAU,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAa,EAAA;AACzD,IAAA,MAAM,OAAO,GAAGA,gBAAU,CAAC,aAAa,CAAC;IAEzC,IAAI,CAAC,OAAO,EAAE;AACZ,QAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC;IACxC;AAEA,IAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO;AAE5B,IAAA,MAAM,WAAW,GAAG,CAAC,CAAsC,KAAI;QAC7D,CAAC,CAAC,cAAc,EAAE;QAClB,QAAQ,CAAC,EAAE,CAAC;AACd,IAAA,CAAC;AAED,IAAA,QACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,EAAG,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,IACpD,QAAQ,CACP;AAER;AAEA;AAEO,MAAM,WAAW,GAAG,MAAMA,gBAAU,CAAC,aAAa;;;;;;;"}